# Place any HAL commands in this file that you want to run AFTER the GUI finishes loading.
# GUI HAL pins are not visible until after the GUI loads.
# This file will not be written over by the configuration tool.

## Setup raspberry pi gpio pins
#   dir is input/output, where 0 means input and 1 means output. exclude is for which pins are enabled, where 0 means use and 1 means do not use
#   Board pin reference, ordered by bitmap order (0 and 1 are excluded): 13 37 22 18 16 15 40 38 35 12 11 36 10 8 33 32 23 19 21 24 26 31 29 7 5 3
#   From bitmaps `echo $((2#01100000000000000000011000))` and `echo $((2#00010001101101001111100011))`
loadrt hal_pi_gpio dir=25165848 exclude=4641763
addf hal_pi_gpio.read servo-thread
addf hal_pi_gpio.write servo-thread

## Setup Debounce
# NOTE May need to adjust cfg, this is the number of debounce inputs
loadrt debounce cfg=10
addf debounce.0 servo-thread

## Setup `and2`
# NOTE May need to adjust count, and add `addf`'s
loadrt and2 count=2
addf and2.0 servo-thread
addf and2.1 servo-thread

## Setup `or2`
# NOTE May need to adjust count, and add `addf`'s
loadrt or2 count=6
addf or2.0 servo-thread
addf or2.1 servo-thread
addf or2.2 servo-thread
addf or2.3 servo-thread
addf or2.4 servo-thread
addf or2.5 servo-thread

## Setup `not`
# NOTE May need to adjust count, and add `addf`'s
loadrt not count=5
addf not.0 servo-thread
addf not.1 servo-thread
addf not.2 servo-thread
addf not.3 servo-thread
addf not.4 servo-thread

## Setup `timedelay`
# NOTE May need to adjust count and add `addf`'s
loadrt timedelay count=5
addf timedelay.0 servo-thread
addf timedelay.1 servo-thread
addf timedelay.2 servo-thread
addf timedelay.3 servo-thread
addf timedelay.4 servo-thread

## Setup faults, removing and re-instating latch from io.hal
#   Move 7i96 esd pin to `or2` chain

loadrt estop_latch
addf estop-latch.0 servo-thread
net estop-loopout iocontrol.0.emc-enable-in <= estop-latch.0.ok-out
# Moved reset to ESD button
# net estop-loopin iocontrol.0.user-enable-out => estop-latch.0.ok-in
# net estop-reset iocontrol.0.user-request-enable => estop-latch.0.reset
net remote-estop or2.0.out => estop-latch.0.fault-in not.3.in
net remote-estop-ok not.3.out => estop-latch.0.ok-in timedelay.0.in timedelay.1.in timedelay.2.in

# Delay 0 - Disable software estop
setp timedelay.0.on-delay 0.5
setp timedelay.0.off-delay 0
net estop-reset timedelay.0.out => estop-latch.0.reset

# Delay 1 - Power on machine
setp timedelay.1.on-delay 2.0
setp timedelay.1.off-delay 0
net power-on timedelay.1.out => halui.machine.on not.4.in
net power-off not.4.out => halui.machine.off

# Delay 2 - Home
setp timedelay.2.on-delay 7.0
setp timedelay.2.off-delay 0
net power-on timedelay.1.out => halui.home-all

net estop-chain-1 or2.1.out => or2.0.in1
net estop-chain-2 or2.2.out => or2.1.in1
net estop-chain-3 or2.3.out => or2.2.in1
net estop-chain-4 or2.4.out => or2.3.in1
net estop-chain-5 or2.5.out => or2.4.in1

## Connect LEDs via GPIO pins
### start: board29
net start-led halui.program.is-running => hal_pi_gpio.pin-29-out
### pause: board31
#   Merged with start button input so that halui.program.is-paused isn't referenced twice
### stop: board37
#   Merged with start button input so that halui.program.is-idle isn't referenced twice
### esd: board22
net esd-led halui.estop.is-activated => hal_pi_gpio.pin-22-out

## Connect input GPIO pins
### start: board07
net start-button-inverted hal_pi_gpio.pin-07-in => not.0.in
net start-button-debounce not.0.out => debounce.0.0.in
net start-button-to-start debounce.0.0.out => and2.0.in0 and2.1.in0
#### If program is idle
net start-button-is-idle halui.program.is-idle => and2.0.in1 hal_pi_gpio.pin-37-out
net start-button-start and2.0.out => halui.program.run
#### If program is paused
net start-button-is-paused halui.program.is-paused => and2.1.in1 hal_pi_gpio.pin-31-out
net start-button-resume and2.1.out => halui.program.resume

### pause: board13
net pause-button-inverted hal_pi_gpio.pin-13-in => not.1.in
net pause-button-debounce not.1.out => debounce.0.1.in
net pause-button debounce.0.1.out => halui.program.pause

### stop: board15
net stop-button-debounce hal_pi_gpio.pin-15-in => debounce.0.2.in
net stop-button debounce.0.2.out => halui.program.stop timedelay.3.in timedelay.4.in
#### Delay 3 - Park
setp timedelay.3.on-delay 1.5
setp timedelay.3.off-delay 0
net stop-button-park timedelay.3.out => halui.mdi-command-00
#### Delay 3 - Eject
setp timedelay.4.on-delay 5.0
setp timedelay.4.off-delay 0
net stop-button-eject timedelay.4.out => halui.mdi-command-01

### esd: board16
net esd-debounce hal_pi_gpio.pin-16-in => debounce.0.3.in
net esd debounce.0.3.out => or2.0.in0

### servo fault: board12
net servo-fault-debounce hal_pi_gpio.pin-12-in => debounce.0.4.in
net servo-fault debounce.0.4.out => or2.1.in0

### chiller fault: board33
net chiller-fault-debounce hal_pi_gpio.pin-33-in => debounce.0.5.in
# TODO Re-enable
# net chiller-fault debounce.0.5.out => or2.2.in0

### cover open: board32
net cover-open-debounce hal_pi_gpio.pin-32-in => debounce.0.6.in
# TODO Re-enable
# net cover-open debounce.0.6.out => or2.3.in0

### door open: board40
net door-open-debounce hal_pi_gpio.pin-40-in => debounce.0.7.in
# TODO Re-enable
# net door-open debounce.0.7.out => or2.4.in0

### blower fault: board10
net blower-fault-inverted hal_pi_gpio.pin-10-in => not.2.in
net blower-fault-debounce not.2.out => debounce.0.8.in
net blower-fault debounce.0.8.out => or2.5.in0

# Enable stepper motors when machine is powered on
net enable-motors halui.machine.is-on => hm2_7i96.0.ssr.00.out-00 hm2_7i96.0.ssr.00.out-01 hm2_7i96.0.ssr.00.out-02 hm2_7i96.0.ssr.00.out-03 hm2_7i96.0.ssr.00.out-04
